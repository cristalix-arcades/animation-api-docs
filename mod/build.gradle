plugins {
    id 'anime.mod-bundler'
    id 'org.hidetake.ssh'
}

dependencies {
    compileOnly 'ru.cristalix:client-api:10.2-SNAPSHOT'
    implementation 'ru.cristalix:client-sdk:10.2-SNAPSHOT'
    implementation 'ru.cristalix:uiengine:10.2-SNAPSHOT'
    implementation 'implario:humanize:1.1.3'
    implementation project(':protocol')
}

mod {
    name = "Animation Api"
    main = "Main"
    author = "func"
    jarFileName = "animation-api-production.jar"
}

task upload() {
    if (!System.getenv("SSH_PASSPHRASE")) return
    remotes {
        webServer {
            host = 'storage.c7x.ru'
            user = 'func'
            knownHosts = allowAnyHosts
            identity = file(System.getenv("RSA_PATH") ?: "C://Users/func/.ssh/id_rsa")
            passphrase = System.getenv("SSH_PASSPHRASE")
        }
    }
    doLast {
        ssh.run {
            session(remotes.webServer) {
                def dir = "/var/www/html/func/animation-api/v" + project.version + "/"
                execute 'mkdir ' + dir
                put from: project(":mod").projectDir.absolutePath + "/build/bundle/animation-api-production.jar",
                into: dir
            }
        }
    }
}

afterEvaluate { tasks.upload.dependsOn(tasks.build) }