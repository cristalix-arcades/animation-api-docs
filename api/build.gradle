plugins {
    id 'java'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "6.1.0"
}

apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'maven-publish'

group 'me.func'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

configurations {
    shade
    compileClasspath.extendsFrom(shade)
}

dependencies {
    shade project(':protocol')

    compileOnly 'cristalix:dark-paper:21.02.03'

    implementation 'cristalix:bukkit-core:21.01.30'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.6.0'
    implementation 'dev.xdark:feder:live-SNAPSHOT'
}

publishing {
    repositories {
        maven {
            name 'func'
            url 'https://repo.implario.dev/cristalix'
            credentials {
                username System.getenv('IMPLARIO_REPO_USER')
                password System.getenv('IMPLARIO_REPO_PASSWORD')
            }
        }
    }
    def p = project
    publications {
        create(p.name, MavenPublication) {
            it.groupId = 'me.func'
            it.artifactId = 'animation-api'
            it.version = 'live-SNAPSHOT'
            it.artifact p.tasks.jar
        }
    }
}

tasks {
    build { dependsOn(shadowJar) }
    jar {
        archiveBaseName.set 'animation-api'
        from configurations.shade.collect { it.isDirectory() ? it : zipTree(it) }
        duplicatesStrategy DuplicatesStrategy.EXCLUDE
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
